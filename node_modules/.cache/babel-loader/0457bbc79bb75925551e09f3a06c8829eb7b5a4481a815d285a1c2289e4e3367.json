{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\letrat\\\\src\\\\components\\\\Section7.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Example() {\n  _s();\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"\",\n      onClick: handleShow,\n      style: {\n        color: 'red'\n      },\n      children: \"Launch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Offcanvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Example, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useState","Button","Offcanvas","Example","show","setShow","handleClose","handleShow","color"],"sources":["C:/Users/User/Desktop/letrat/src/components/Section7.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\n\r\nfunction Example() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"\" onClick={handleShow} style = {{color: 'red'}}>\r\n        Launch\r\n      </Button>\r\n\r\n      <Offcanvas show={show} onHide={handleClose}>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          Some text as placeholder. In real life you can have the elements you\r\n          have chosen. Like, text, images, lists, etc.\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Example;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AAAC;AAAA;AAElD,SAASC,OAAO,GAAG;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMM,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAK,CAAC;EACxC,MAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAI,CAAC;EAEtC,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,OAAO,EAAC,EAAE;MAAC,OAAO,EAAEE,UAAW;MAAC,KAAK,EAAI;QAACC,KAAK,EAAE;MAAK,CAAE;MAAA,UAAC;IAEjE;MAAA;MAAA;MAAA;IAAA,QAAS,eAET,QAAC,SAAS;MAAC,IAAI,EAAEJ,IAAK;MAAC,MAAM,EAAEE,WAAY;MAAA,wBACzC,QAAC,SAAS,CAAC,MAAM;QAAC,WAAW;QAAA,uBAC3B,QAAC,SAAS,CAAC,KAAK;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA;MAAkB;QAAA;QAAA;QAAA;MAAA,QAC3B,eACnB,QAAC,SAAS,CAAC,IAAI;QAAA,UAAC;MAGhB;QAAA;QAAA;QAAA;MAAA,QAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,QACP;EAAA,gBACX;AAEP;AAAC,GAvBQH,OAAO;AAAA,KAAPA,OAAO;AAyBhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}